// Copyright 2017 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE.md file.

// Code generated by staticfs_gen.go with go1.8. DO NOT EDIT.

package main

import (
	"compress/gzip"
	"encoding/base64"
	"io/ioutil"
	"strings"
)

// mimeTypes is a mapping from file extensions to MIME types.
var mimeTypes = map[string]string{
	"css":  "text/css; charset=utf-8",
	"html": "text/html; charset=utf-8",
	"ico":  "image/x-icon",
	"js":   "application/javascript",
	"svg":  "image/svg+xml",
	"woff": "font/woff",
}

// mimeFromPath returns the MIME type based on the file extension in the path.
func mimeFromPath(p string) string {
	if i := strings.LastIndexByte(p, '.'); i >= 0 {
		return mimeTypes[p[i+1:]]
	}
	return ""
}

// staticFS is a mapping from file paths to the contents of a file.
var staticFS = map[string][]byte{
	"html/playground-login.html": decompressBase64("H4sIAAAAAAAC/yTJT2qEMBQH4H1O8esBkv7ZdCOCtVIKpRtnDqDJ0wRi3pD3FLz9wMzqW3zNi7Wm59tZ0xoVH2/vn7hEwg+j2zVyFYcuZzxaUEmoHhScuQqBF2hMAuG9eoLnQEiClQ+qhQLmExO+xm8remYyOXkqQtA4KfxUMBMW3ktAKtBI+Pvth/9xcFvAkjI5Y21rTBN1y61pXp/eAwAA///kl9S0sgAAAA=="),
	"html/playground.html":       decompressBase64("H4sIAAAAAAAC/yTJT2qEMBQH4H1O8esBkv7ZdCOCtVIKpRtnDqDJ0wRi3pD3FLz9wMzqW3zNi7Wm59tZ0xoVH2/vn7hEwg+j2zVyFYcuZzxaUEmoHhScuQqBF2hMAuG9eoLnQEiClQ+qhQLmExO+xm8remYyOXkqQtA4KfxUMBMW3ktAKtBI+Pvth/9xcFvAkjI5Y21rTBN1y61pXp/eAwAA///kl9S0sgAAAA=="),
	"img/favicon.ico":            decompressBase64("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"),
	"img/favicon.svg":            decompressBase64("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"),
}

func decompressBase64(s string) []byte {
	r := strings.NewReader(s)
	rx := base64.NewDecoder(base64.StdEncoding, r)
	rz, _ := gzip.NewReader(rx)
	b, _ := ioutil.ReadAll(rz)
	return b
}
